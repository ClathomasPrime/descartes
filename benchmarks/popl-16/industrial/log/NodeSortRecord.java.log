Property 1
descartes -p=1 -m=0: 
Sat: Comparator VIOLATES Property 1: forall x and y, sgn(compare(x,y)) == âˆ’sgn(compare(y,x))
cmp23!697 -> 1
level11!765 -> 0
cmp22!694 -> 0
their22!693 -> 0
o21!7 -> NodeSortRecord!val!1
level11 -> 0
res1!10 -> (- 1)
level21!764 -> 0
their23!696 -> 0
their13!188 -> 1
level21 -> 0
o12!8 -> NodeSortRecord!val!1
levels11 -> 1
o22!9 -> NodeSortRecord!val!0
their12!185 -> 0
our23!695 -> 1
our12!184 -> 0
cmp12!186 -> 0
cmp13!189 -> (- 1)
levels21 -> 1
our22!692 -> 0
res2!11 -> (- 1)
o11!6 -> NodeSortRecord!val!0
our13!187 -> 0
compareIgnoreCaseString!17 -> {
  0
}
k!801 -> {
  (ite (>= (:var 0) 0) 0 (- 1))
}
get!4 -> {
  (get!4!802 (:var 0) (k!801 (:var 1)))
}
sortOrder!3 -> {
  NodeSortRecord!val!1 0 -> 1
  else -> 10
}
stringValue!1 -> {
  (stringValue!1!803 (:var 0) (k!801 (:var 1)))
}
compareDouble!15 -> {
  0
}
compareInt!16 -> {
  0
}
numericValue!2 -> {
  0
}
settingsGetSortOrdersLength!5 -> {
  1
}
get!4!802 -> {
  NodeSortRecord!val!1 0 -> 12
  else -> 9
}
stringValue!1!803 -> {
  NodeSortRecord!val!0 0 -> 0
  else -> 1
}


real	0m0.644s
user	0m0.637s
sys	0m0.004s
Property 2
descartes -p=2 -m=0: 
Sat: Comparator VIOLATES Property 2: for all x, y and z, compare(x, y) > 0 and compare(y, z) > 0 implies compare(x, z) > 0.
cmp23!701 -> (- 1)
level11 -> 3959
our12!187 -> 0
res1!12 -> 1
level21!1862 -> 0
levels31 -> 3961
o12!8 -> NodeSortRecord!val!1
our13!190 -> 0
levels21 -> 5982
o13!10 -> NodeSortRecord!val!0
res3!14 -> (- 1)
o11!6 -> NodeSortRecord!val!0
o23!11 -> NodeSortRecord!val!2
cmp32!1651 -> 0
their32!1650 -> (- 1)
their22!697 -> 0
their33!1653 -> (- 2)
res2!13 -> 1
our32!1649 -> (- 1)
o21!7 -> NodeSortRecord!val!1
their12!188 -> 0
level21 -> 5981
their23!700 -> 0
our33!1652 -> (- 1)
cmp12!189 -> 0
our22!696 -> 0
levels11 -> 3961
level11!1863 -> 0
o22!9 -> NodeSortRecord!val!2
cmp13!192 -> (- 1)
cmp22!698 -> 0
our23!699 -> (- 1)
their13!191 -> 1
level31!1861 -> 0
level31 -> 3960
cmp33!1654 -> 1
get!4!1935 -> {
  NodeSortRecord!val!0 3959 -> 7
  NodeSortRecord!val!1 5981 -> 12
  NodeSortRecord!val!0 3960 -> 14
  else -> 0
}
compareInt!19 -> {
  0
}
stringValue!1!1937 -> {
  NodeSortRecord!val!1 3959 -> 1
  NodeSortRecord!val!1 5981 -> (- 1)
  NodeSortRecord!val!0 3960 -> (- 1)
  NodeSortRecord!val!2 3960 -> (- 2)
  else -> 0
}
compareDouble!18 -> {
  0
}
stringValue!1 -> {
  (stringValue!1!1937 (:var 0) (k!1934 (:var 1)))
}
get!4 -> {
  (get!4!1935 (:var 0) (k!1934 (:var 1)))
}
sortOrder!3 -> {
  1
}
numericValue!2 -> {
  (numericValue!2!1936 (:var 0) (k!1934 (:var 1)))
}
k!1934 -> {
  (let ((a!1 (ite (>= (:var 0) 3960)
                  (ite (>= (:var 0) 5980)
                       (ite (>= (:var 0) 5981) 5981 5980)
                       3960)
                  3959)))
    (ite (>= (:var 0) 3958) (ite (>= (:var 0) 3959) a!1 3958) 0))
}
compareIgnoreCaseString!20 -> {
  0
}
numericValue!2!1936 -> {
  NodeSortRecord!val!0 3960 -> (- 1)
  NodeSortRecord!val!2 3960 -> (- 1)
  NodeSortRecord!val!1 3960 -> (- 1)
  else -> 0
}
settingsGetSortOrdersLength!5 -> {
  NodeSortRecord!val!0 -> 3961
  else -> 5982
}


real	0m3.927s
user	0m3.902s
sys	0m0.024s
Property 3
descartes -p=3 -m=0: 
Sat: Comparator VIOLATES Property 3: for all x, y and z, compare(x,y) == 0 implies that sgn(compare(x, z)) == sgn(compare(y, z)).
our32!1432 -> 0
cmp33!1437 -> 1
level11 -> 1
res1!12 -> 0
cmp22!651 -> 0
their32!1433 -> 0
levels31 -> 2
o12!8 -> NodeSortRecord!val!0
levels21 -> 1
level11!1542 -> 0
o13!10 -> NodeSortRecord!val!1
their33!1436 -> (- 2)
their23!653 -> 1
o23!11 -> NodeSortRecord!val!2
o11!6 -> NodeSortRecord!val!0
res3!14 -> (- 1)
res2!13 -> 1
their22!650 -> (- 1)
o21!7 -> NodeSortRecord!val!1
level21 -> 0
cmp23!654 -> (- 1)
level31!1540 -> 0
levels11 -> 1
o22!9 -> NodeSortRecord!val!2
cmp32!1434 -> 0
level31 -> 1
level21!1541 -> 0
our23!652 -> 0
our33!1435 -> (- 1)
our22!649 -> (- 1)
stringValue!1!1682 -> {
  NodeSortRecord!val!2 0 -> 1
  NodeSortRecord!val!1 1 -> (- 1)
  NodeSortRecord!val!2 1 -> (- 2)
  else -> 0
}
compareInt!19 -> {
  0
}
compareDouble!18 -> {
  0
}
sortOrder!3 -> {
  1
}
stringValue!1 -> {
  (stringValue!1!1682 (:var 0) (k!1679 (:var 1)))
}
get!4 -> {
  (get!4!1680 (:var 0) (k!1679 (:var 1)))
}
numericValue!2!1681 -> {
  NodeSortRecord!val!1 1 -> 0
  NodeSortRecord!val!2 1 -> 0
  else -> (- 1)
}
k!1679 -> {
  (ite (>= (:var 0) 0) (ite (>= (:var 0) 1) 1 0) (- 1))
}
node!0 -> {
  0
}
numericValue!2 -> {
  (numericValue!2!1681 (:var 0) (k!1679 (:var 1)))
}
compareIgnoreCaseString!20 -> {
  0
}
settingsGetSortOrdersLength!5 -> {
  NodeSortRecord!val!1 -> 2
  else -> 1
}
get!4!1680 -> {
  NodeSortRecord!val!1 1 -> 16
  NodeSortRecord!val!1 0 -> 0
  else -> 14
}


real	0m1.141s
user	0m1.132s
sys	0m0.008s
