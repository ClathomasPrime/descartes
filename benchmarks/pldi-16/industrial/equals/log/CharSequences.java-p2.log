Property 2 (Transitivity)
descartes -p=4 -m=0: 
Unsat: OBEYS [Transitivity]Â (equals): for all x, y and z, equals(x, y) and equals(y, z) implies equals(x, z).

real	0m0.102s
user	0m0.094s
sys	0m0.008s
descartes -p=4 -m=2: 
descartes: analyse_loop failed

real	0m0.033s
user	0m0.033s
sys	0m0.000s
descartes -p=4 -m=3: 
Invariant:
(let ((a!1 (exists ((i31 Int))
             (let ((a!1 (not (not (= (length!1 o13!6) (length!1 o23!7))))))
               (and (= o11!2 o13!6)
                    (= o21!3 o12!4)
                    (= o22!5 o23!7)
                    (not (= (length!1 o11!2) (length!1 o21!3)))
                    (= res1!8 0)
                    (not (= (length!1 o12!4) (length!1 o22!5)))
                    (= res2!9 0)
                    a!1
                    (= length31 (length!1 o13!6))
                    (= i31 0)))))
      (a!2 (forall ((j3 Int))
             (let ((a!1 (not (not (= (charAt!0 o13!6 j3) (charAt!0 o23!7 j3))))))
               (=> (and (<= 0 j3) (< j3 i31)) a!1)))))
  (and a!1 a!2 (>= i31 0)))
Invariant:
(let ((a!1 (exists ((i21 Int))
             (let ((a!1 (not (not (= (length!1 o12!4) (length!1 o22!5))))))
               (and (= o11!2 o13!6)
                    (= o21!3 o12!4)
                    (= o22!5 o23!7)
                    (not (= (length!1 o11!2) (length!1 o21!3)))
                    (= res1!8 0)
                    a!1
                    (= length21 (length!1 o12!4))
                    (= i21 0)))))
      (a!2 (forall ((j2 Int))
             (let ((a!1 (not (not (= (charAt!0 o12!4 j2) (charAt!0 o22!5 j2))))))
               (=> (and (<= 0 j2) (< j2 i21)) a!1)))))
  (and a!1 a!2 (>= i21 0)))
Invariant:
(let ((a!1 (exists ((i31 Int))
             (let ((a!1 (exists ((i21 Int))
                          (let ((a!1 (not (not (= (length!1 o12!4)
                                                  (length!1 o22!5))))))
                            (and (= o11!2 o13!6)
                                 (= o21!3 o12!4)
                                 (= o22!5 o23!7)
                                 (not (= (length!1 o11!2) (length!1 o21!3)))
                                 (= res1!8 0)
                                 a!1
                                 (= length21 (length!1 o12!4))
                                 (= i21 0)))))
                   (a!2 (forall ((j2 Int))
                          (let ((a!1 (not (not (= (charAt!0 o12!4 j2)
                                                  (charAt!0 o22!5 j2))))))
                            (=> (and (<= 0 j2) (< j2 i21)) a!1))))
                   (a!3 (not (not (= (charAt!0 o12!4 i21) (charAt!0 o22!5 i21)))))
                   (a!4 (not (not (= (charAt!0 o12!4 i22!419)
                                     (charAt!0 o22!5 i22!419)))))
                   (a!5 (not (not (= (length!1 o13!6) (length!1 o23!7))))))
               (and (and a!1 a!2 (>= i21 0))
                    (and a!1 a!2 (>= i21 0))
                    (< i21 length21)
                    a!3
                    (= i22!419 (+ i21 1))
                    (< i22!419 length21)
                    (not a!4)
                    (= res2!9 0)
                    a!5
                    (= length31 (length!1 o13!6))
                    (= i31 0)))))
      (a!2 (forall ((j3 Int))
             (let ((a!1 (not (not (= (charAt!0 o13!6 j3) (charAt!0 o23!7 j3))))))
               (=> (and (<= 0 j3) (< j3 i31)) a!1)))))
  (and a!1 a!2 (>= i31 0)))
Invariant:
(let ((a!1 (exists ((i31 Int))
             (let ((a!1 (exists ((i21 Int))
                          (let ((a!1 (not (not (= (length!1 o12!4)
                                                  (length!1 o22!5))))))
                            (and (= o11!2 o13!6)
                                 (= o21!3 o12!4)
                                 (= o22!5 o23!7)
                                 (not (= (length!1 o11!2) (length!1 o21!3)))
                                 (= res1!8 0)
                                 a!1
                                 (= length21 (length!1 o12!4))
                                 (= i21 0)))))
                   (a!2 (forall ((j2 Int))
                          (let ((a!1 (not (not (= (charAt!0 o12!4 j2)
                                                  (charAt!0 o22!5 j2))))))
                            (=> (and (<= 0 j2) (< j2 i21)) a!1))))
                   (a!3 (not (not (= (charAt!0 o12!4 i21) (charAt!0 o22!5 i21)))))
                   (a!4 (not (not (= (length!1 o13!6) (length!1 o23!7))))))
               (and (and a!1 a!2 (>= i21 0))
                    (and a!1 a!2 (>= i21 0))
                    (< i21 length21)
                    a!3
                    (= i22!419 (+ i21 1))
                    (not (< i22!419 length21))
                    (= res2!9 1)
                    a!4
                    (= length31 (length!1 o13!6))
                    (= i31 0)))))
      (a!2 (forall ((j3 Int))
             (let ((a!1 (not (not (= (charAt!0 o13!6 j3) (charAt!0 o23!7 j3))))))
               (=> (and (<= 0 j3) (< j3 i31)) a!1)))))
  (and a!1 a!2 (>= i31 0)))
Invariant:
(let ((a!1 (exists ((i11 Int))
             (let ((a!1 (not (not (= (length!1 o11!2) (length!1 o21!3))))))
               (and (= o11!2 o13!6)
                    (= o21!3 o12!4)
                    (= o22!5 o23!7)
                    a!1
                    (= length11 (length!1 o11!2))
                    (= i11 0)))))
      (a!2 (forall ((j1 Int))
             (let ((a!1 (not (not (= (charAt!0 o11!2 j1) (charAt!0 o21!3 j1))))))
               (=> (and (<= 0 j1) (< j1 i11)) a!1)))))
  (and a!1 a!2 (>= i11 0)))
Invariant:
(let ((a!1 (exists ((i31 Int))
             (let ((a!1 (exists ((i11 Int))
                          (let ((a!1 (not (not (= (length!1 o11!2)
                                                  (length!1 o21!3))))))
                            (and (= o11!2 o13!6)
                                 (= o21!3 o12!4)
                                 (= o22!5 o23!7)
                                 a!1
                                 (= length11 (length!1 o11!2))
                                 (= i11 0)))))
                   (a!2 (forall ((j1 Int))
                          (let ((a!1 (not (not (= (charAt!0 o11!2 j1)
                                                  (charAt!0 o21!3 j1))))))
                            (=> (and (<= 0 j1) (< j1 i11)) a!1))))
                   (a!3 (not (not (= (charAt!0 o11!2 i11) (charAt!0 o21!3 i11)))))
                   (a!4 (not (not (= (charAt!0 o11!2 i12!722)
                                     (charAt!0 o21!3 i12!722)))))
                   (a!5 (not (not (= (length!1 o13!6) (length!1 o23!7))))))
               (and (and a!1 a!2 (>= i11 0))
                    (and a!1 a!2 (>= i11 0))
                    (< i11 length11)
                    a!3
                    (= i12!722 (+ i11 1))
                    (< i12!722 length11)
                    (not a!4)
                    (= res1!8 0)
                    (not (= (length!1 o12!4) (length!1 o22!5)))
                    (= res2!9 0)
                    a!5
                    (= length31 (length!1 o13!6))
                    (= i31 0)))))
      (a!2 (forall ((j3 Int))
             (let ((a!1 (not (not (= (charAt!0 o13!6 j3) (charAt!0 o23!7 j3))))))
               (=> (and (<= 0 j3) (< j3 i31)) a!1)))))
  (and a!1 a!2 (>= i31 0)))
Invariant:
(let ((a!1 (exists ((i21 Int))
             (let ((a!1 (exists ((i11 Int))
                          (let ((a!1 (not (not (= (length!1 o11!2)
                                                  (length!1 o21!3))))))
                            (and (= o11!2 o13!6)
                                 (= o21!3 o12!4)
                                 (= o22!5 o23!7)
                                 a!1
                                 (= length11 (length!1 o11!2))
                                 (= i11 0)))))
                   (a!2 (forall ((j1 Int))
                          (let ((a!1 (not (not (= (charAt!0 o11!2 j1)
                                                  (charAt!0 o21!3 j1))))))
                            (=> (and (<= 0 j1) (< j1 i11)) a!1))))
                   (a!3 (not (not (= (charAt!0 o11!2 i11) (charAt!0 o21!3 i11)))))
                   (a!4 (not (not (= (charAt!0 o11!2 i12!722)
                                     (charAt!0 o21!3 i12!722)))))
                   (a!5 (not (not (= (length!1 o12!4) (length!1 o22!5))))))
               (and (and a!1 a!2 (>= i11 0))
                    (and a!1 a!2 (>= i11 0))
                    (< i11 length11)
                    a!3
                    (= i12!722 (+ i11 1))
                    (< i12!722 length11)
                    (not a!4)
                    (= res1!8 0)
                    a!5
                    (= length21 (length!1 o12!4))
                    (= i21 0)))))
      (a!2 (forall ((j2 Int))
             (let ((a!1 (not (not (= (charAt!0 o12!4 j2) (charAt!0 o22!5 j2))))))
               (=> (and (<= 0 j2) (< j2 i21)) a!1)))))
  (and a!1 a!2 (>= i21 0)))
Invariant:
(let ((a!1 (exists ((i31 Int))
             (let ((a!1 (exists ((i21 Int))
                          (let ((a!1 (exists ((i11 Int))
                                       (let ((a!1 (not (not (= (length!1 o11!2)
                                                               (length!1 o21!3))))))
                                         (and (= o11!2 o13!6)
                                              (= o21!3 o12!4)
                                              (= o22!5 o23!7)
                                              a!1
                                              (= length11 (length!1 o11!2))
                                              (= i11 0)))))
                                (a!2 (forall ((j1 Int))
                                       (let ((a!1 (not (not (= (charAt!0 o11!2
                                                                         j1)
                                                               (charAt!0 o21!3
                                                                         j1))))))
                                         (=> (and (<= 0 j1) (< j1 i11)) a!1))))
                                (a!3 (not (not (= (charAt!0 o11!2 i11)
                                                  (charAt!0 o21!3 i11)))))
                                (a!4 (not (not (= (charAt!0 o11!2 i12!722)
                                                  (charAt!0 o21!3 i12!722)))))
                                (a!5 (not (not (= (length!1 o12!4)
                                                  (length!1 o22!5))))))
                            (and (and a!1 a!2 (>= i11 0))
                                 (and a!1 a!2 (>= i11 0))
                                 (< i11 length11)
                                 a!3
                                 (= i12!722 (+ i11 1))
                                 (< i12!722 length11)
                                 (not a!4)
                                 (= res1!8 0)
                                 a!5
                                 (= length21 (length!1 o12!4))
                                 (= i21 0)))))
                   (a!2 (forall ((j2 Int))
                          (let ((a!1 (not (not (= (charAt!0 o12!4 j2)
                                                  (charAt!0 o22!5 j2))))))
                            (=> (and (<= 0 j2) (< j2 i21)) a!1))))
                   (a!3 (not (not (= (charAt!0 o12!4 i21) (charAt!0 o22!5 i21)))))
                   (a!4 (not (not (= (charAt!0 o12!4 i22!1166)
                                     (charAt!0 o22!5 i22!1166)))))
                   (a!5 (not (not (= (length!1 o13!6) (length!1 o23!7))))))
               (and (and a!1 a!2 (>= i21 0))
                    (and a!1 a!2 (>= i21 0))
                    (< i21 length21)
                    a!3
                    (= i22!1166 (+ i21 1))
                    (< i22!1166 length21)
                    (not a!4)
                    (= res2!9 0)
                    a!5
                    (= length31 (length!1 o13!6))
                    (= i31 0)))))
      (a!2 (forall ((j3 Int))
             (let ((a!1 (not (not (= (charAt!0 o13!6 j3) (charAt!0 o23!7 j3))))))
               (=> (and (<= 0 j3) (< j3 i31)) a!1)))))
  (and a!1 a!2 (>= i31 0)))
Invariant:
(let ((a!1 (exists ((i31 Int))
             (let ((a!1 (exists ((i21 Int))
                          (let ((a!1 (exists ((i11 Int))
                                       (let ((a!1 (not (not (= (length!1 o11!2)
                                                               (length!1 o21!3))))))
                                         (and (= o11!2 o13!6)
                                              (= o21!3 o12!4)
                                              (= o22!5 o23!7)
                                              a!1
                                              (= length11 (length!1 o11!2))
                                              (= i11 0)))))
                                (a!2 (forall ((j1 Int))
                                       (let ((a!1 (not (not (= (charAt!0 o11!2
                                                                         j1)
                                                               (charAt!0 o21!3
                                                                         j1))))))
                                         (=> (and (<= 0 j1) (< j1 i11)) a!1))))
                                (a!3 (not (not (= (charAt!0 o11!2 i11)
                                                  (charAt!0 o21!3 i11)))))
                                (a!4 (not (not (= (charAt!0 o11!2 i12!722)
                                                  (charAt!0 o21!3 i12!722)))))
                                (a!5 (not (not (= (length!1 o12!4)
                                                  (length!1 o22!5))))))
                            (and (and a!1 a!2 (>= i11 0))
                                 (and a!1 a!2 (>= i11 0))
                                 (< i11 length11)
                                 a!3
                                 (= i12!722 (+ i11 1))
                                 (< i12!722 length11)
                                 (not a!4)
                                 (= res1!8 0)
                                 a!5
                                 (= length21 (length!1 o12!4))
                                 (= i21 0)))))
                   (a!2 (forall ((j2 Int))
                          (let ((a!1 (not (not (= (charAt!0 o12!4 j2)
                                                  (charAt!0 o22!5 j2))))))
                            (=> (and (<= 0 j2) (< j2 i21)) a!1))))
                   (a!3 (not (not (= (charAt!0 o12!4 i21) (charAt!0 o22!5 i21)))))
                   (a!4 (not (not (= (length!1 o13!6) (length!1 o23!7))))))
               (and (and a!1 a!2 (>= i21 0))
                    (and a!1 a!2 (>= i21 0))
                    (< i21 length21)
                    a!3
                    (= i22!1166 (+ i21 1))
                    (not (< i22!1166 length21))
                    (= res2!9 1)
                    a!4
                    (= length31 (length!1 o13!6))
                    (= i31 0)))))
      (a!2 (forall ((j3 Int))
             (let ((a!1 (not (not (= (charAt!0 o13!6 j3) (charAt!0 o23!7 j3))))))
               (=> (and (<= 0 j3) (< j3 i31)) a!1)))))
  (and a!1 a!2 (>= i31 0)))
Invariant:
(let ((a!1 (exists ((i31 Int))
             (let ((a!1 (exists ((i11 Int))
                          (let ((a!1 (not (not (= (length!1 o11!2)
                                                  (length!1 o21!3))))))
                            (and (= o11!2 o13!6)
                                 (= o21!3 o12!4)
                                 (= o22!5 o23!7)
                                 a!1
                                 (= length11 (length!1 o11!2))
                                 (= i11 0)))))
                   (a!2 (forall ((j1 Int))
                          (let ((a!1 (not (not (= (charAt!0 o11!2 j1)
                                                  (charAt!0 o21!3 j1))))))
                            (=> (and (<= 0 j1) (< j1 i11)) a!1))))
                   (a!3 (not (not (= (charAt!0 o11!2 i11) (charAt!0 o21!3 i11)))))
                   (a!4 (not (not (= (length!1 o13!6) (length!1 o23!7))))))
               (and (and a!1 a!2 (>= i11 0))
                    (and a!1 a!2 (>= i11 0))
                    (< i11 length11)
                    a!3
                    (= i12!722 (+ i11 1))
                    (not (< i12!722 length11))
                    (= res1!8 1)
                    (not (= (length!1 o12!4) (length!1 o22!5)))
                    (= res2!9 0)
                    a!4
                    (= length31 (length!1 o13!6))
                    (= i31 0)))))
      (a!2 (forall ((j3 Int))
             (let ((a!1 (not (not (= (charAt!0 o13!6 j3) (charAt!0 o23!7 j3))))))
               (=> (and (<= 0 j3) (< j3 i31)) a!1)))))
  (and a!1 a!2 (>= i31 0)))
Invariant:
(let ((a!1 (exists ((i21 Int))
             (let ((a!1 (exists ((i11 Int))
                          (let ((a!1 (not (not (= (length!1 o11!2)
                                                  (length!1 o21!3))))))
                            (and (= o11!2 o13!6)
                                 (= o21!3 o12!4)
                                 (= o22!5 o23!7)
                                 a!1
                                 (= length11 (length!1 o11!2))
                                 (= i11 0)))))
                   (a!2 (forall ((j1 Int))
                          (let ((a!1 (not (not (= (charAt!0 o11!2 j1)
                                                  (charAt!0 o21!3 j1))))))
                            (=> (and (<= 0 j1) (< j1 i11)) a!1))))
                   (a!3 (not (not (= (charAt!0 o11!2 i11) (charAt!0 o21!3 i11)))))
                   (a!4 (not (not (= (length!1 o12!4) (length!1 o22!5))))))
               (and (and a!1 a!2 (>= i11 0))
                    (and a!1 a!2 (>= i11 0))
                    (< i11 length11)
                    a!3
                    (= i12!722 (+ i11 1))
                    (not (< i12!722 length11))
                    (= res1!8 1)
                    a!4
                    (= length21 (length!1 o12!4))
                    (= i21 0)))))
      (a!2 (forall ((j2 Int))
             (let ((a!1 (not (not (= (charAt!0 o12!4 j2) (charAt!0 o22!5 j2))))))
               (=> (and (<= 0 j2) (< j2 i21)) a!1)))))
  (and a!1 a!2 (>= i21 0)))
Invariant:
(let ((a!1 (exists ((i31 Int))
             (let ((a!1 (exists ((i21 Int))
                          (let ((a!1 (exists ((i11 Int))
                                       (let ((a!1 (not (not (= (length!1 o11!2)
                                                               (length!1 o21!3))))))
                                         (and (= o11!2 o13!6)
                                              (= o21!3 o12!4)
                                              (= o22!5 o23!7)
                                              a!1
                                              (= length11 (length!1 o11!2))
                                              (= i11 0)))))
                                (a!2 (forall ((j1 Int))
                                       (let ((a!1 (not (not (= (charAt!0 o11!2
                                                                         j1)
                                                               (charAt!0 o21!3
                                                                         j1))))))
                                         (=> (and (<= 0 j1) (< j1 i11)) a!1))))
                                (a!3 (not (not (= (charAt!0 o11!2 i11)
                                                  (charAt!0 o21!3 i11)))))
                                (a!4 (not (not (= (length!1 o12!4)
                                                  (length!1 o22!5))))))
                            (and (and a!1 a!2 (>= i11 0))
                                 (and a!1 a!2 (>= i11 0))
                                 (< i11 length11)
                                 a!3
                                 (= i12!722 (+ i11 1))
                                 (not (< i12!722 length11))
                                 (= res1!8 1)
                                 a!4
                                 (= length21 (length!1 o12!4))
                                 (= i21 0)))))
                   (a!2 (forall ((j2 Int))
                          (let ((a!1 (not (not (= (charAt!0 o12!4 j2)
                                                  (charAt!0 o22!5 j2))))))
                            (=> (and (<= 0 j2) (< j2 i21)) a!1))))
                   (a!3 (not (not (= (charAt!0 o12!4 i21) (charAt!0 o22!5 i21)))))
                   (a!4 (not (not (= (charAt!0 o12!4 i22!3831)
                                     (charAt!0 o22!5 i22!3831)))))
                   (a!5 (not (not (= (length!1 o13!6) (length!1 o23!7))))))
               (and (and a!1 a!2 (>= i21 0))
                    (and a!1 a!2 (>= i21 0))
                    (< i21 length21)
                    a!3
                    (= i22!3831 (+ i21 1))
                    (< i22!3831 length21)
                    (not a!4)
                    (= res2!9 0)
                    a!5
                    (= length31 (length!1 o13!6))
                    (= i31 0)))))
      (a!2 (forall ((j3 Int))
             (let ((a!1 (not (not (= (charAt!0 o13!6 j3) (charAt!0 o23!7 j3))))))
               (=> (and (<= 0 j3) (< j3 i31)) a!1)))))
  (and a!1 a!2 (>= i31 0)))
Invariant:
(let ((a!1 (exists ((i31 Int))
             (let ((a!1 (exists ((i21 Int))
                          (let ((a!1 (exists ((i11 Int))
                                       (let ((a!1 (not (not (= (length!1 o11!2)
                                                               (length!1 o21!3))))))
                                         (and (= o11!2 o13!6)
                                              (= o21!3 o12!4)
                                              (= o22!5 o23!7)
                                              a!1
                                              (= length11 (length!1 o11!2))
                                              (= i11 0)))))
                                (a!2 (forall ((j1 Int))
                                       (let ((a!1 (not (not (= (charAt!0 o11!2
                                                                         j1)
                                                               (charAt!0 o21!3
                                                                         j1))))))
                                         (=> (and (<= 0 j1) (< j1 i11)) a!1))))
                                (a!3 (not (not (= (charAt!0 o11!2 i11)
                                                  (charAt!0 o21!3 i11)))))
                                (a!4 (not (not (= (length!1 o12!4)
                                                  (length!1 o22!5))))))
                            (and (and a!1 a!2 (>= i11 0))
                                 (and a!1 a!2 (>= i11 0))
                                 (< i11 length11)
                                 a!3
                                 (= i12!722 (+ i11 1))
                                 (not (< i12!722 length11))
                                 (= res1!8 1)
                                 a!4
                                 (= length21 (length!1 o12!4))
                                 (= i21 0)))))
                   (a!2 (forall ((j2 Int))
                          (let ((a!1 (not (not (= (charAt!0 o12!4 j2)
                                                  (charAt!0 o22!5 j2))))))
                            (=> (and (<= 0 j2) (< j2 i21)) a!1))))
                   (a!3 (not (not (= (charAt!0 o12!4 i21) (charAt!0 o22!5 i21)))))
                   (a!4 (not (not (= (length!1 o13!6) (length!1 o23!7))))))
               (and (and a!1 a!2 (>= i21 0))
                    (and a!1 a!2 (>= i21 0))
                    (< i21 length21)
                    a!3
                    (= i22!3831 (+ i21 1))
                    (not (< i22!3831 length21))
                    (= res2!9 1)
                    a!4
                    (= length31 (length!1 o13!6))
                    (= i31 0)))))
      (a!2 (forall ((j3 Int))
             (let ((a!1 (not (not (= (charAt!0 o13!6 j3) (charAt!0 o23!7 j3))))))
               (=> (and (<= 0 j3) (< j3 i31)) a!1)))))
  (and a!1 a!2 (>= i31 0)))
Unsat: OBEYS [Transitivity]Â (equals): for all x, y and z, equals(x, y) and equals(y, z) implies equals(x, z).

real	0m0.435s
user	0m0.431s
sys	0m0.004s
