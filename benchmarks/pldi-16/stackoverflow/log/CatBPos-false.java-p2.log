Property 2
descartes -p=2 -m=0: 
Sat: VIOLATES [Transitivity] (compare): for all x, y and z, compare(x, y) > 0 and compare/equals(y, z) > 0 implies compare/equals(x, z) > 0.
res1!14 -> 1
res2!15 -> 1
lCompare12!25 -> 1
o21!9 -> CatBPos!val!1
o12!10 -> CatBPos!val!1
o22!11 -> CatBPos!val!2
lCompare32!3625 -> (- 1)
res3!16 -> (- 1)
o13!12 -> CatBPos!val!0
lCompare22!3403 -> 1
o23!13 -> CatBPos!val!2
o11!8 -> CatBPos!val!0
compareDouble!20 -> {
  0
}
k!4071 -> {
  7 -> 7
  4 -> 4
  2 -> 2
  3 -> 3
  else -> 6
}
equals!23 -> {
  5
}
getHdopBPosGetTime!7 -> {
  CatBPos!val!1 -> 3
  else -> 2
}
getHdopBPosGetTimeIsNotVoid!0 -> {
  CatBPos!val!2 -> false
  else -> true
}
getBPosGetTime!6 -> {
  CatBPos!val!0 -> 6
  CatBPos!val!2 -> 7
  else -> 4
}
compareInt!21 -> {
  (compareInt!21!4074 (k!4071 (:var 0)) (k!4071 (:var 1)))
}
compareIgnoreCaseString!22 -> {
  0
}
compareInt!21!4074 -> {
  2 3 -> 1
  4 7 -> 1
  4 6 -> 1
  3 4 -> 1
  3 3 -> 0
  3 7 -> 1
  2 7 -> 1
  7 7 -> 0
  4 4 -> 0
  7 6 -> 1
  2 4 -> 1
  3 6 -> 1
  2 2 -> 0
  2 6 -> 1
  6 6 -> 0
  else -> (- 1)
}


real	0m7.741s
user	0m7.719s
sys	0m0.020s
descartes -p=2 -m=1: 
Sat: VIOLATES [Transitivity] (compare): for all x, y and z, compare(x, y) > 0 and compare/equals(y, z) > 0 implies compare/equals(x, z) > 0.
res1!14 -> 1
lCompare22!1896 -> 1
lCompare12!25 -> 1
o21!9 -> CatBPos!val!1
o12!10 -> CatBPos!val!1
o22!11 -> CatBPos!val!2
res2!15 -> 1
lCompare32!1899 -> (- 1)
res3!16 -> (- 1)
o13!12 -> CatBPos!val!0
o23!13 -> CatBPos!val!2
o11!8 -> CatBPos!val!0
compareDouble!20 -> {
  0
}
equals!23 -> {
  5
}
getHdopBPosGetTime!7 -> {
  CatBPos!val!1 -> 3
  else -> 2
}
getHdopBPosGetTimeIsNotVoid!0 -> {
  CatBPos!val!2 -> false
  else -> true
}
compareInt!21!2126 -> {
  2 3 -> 1
  4 7 -> 1
  4 6 -> 1
  6 2 -> 1
  3 3 -> 0
  7 7 -> 0
  4 3 -> 1
  4 4 -> 0
  4 2 -> 1
  2 2 -> 0
  7 2 -> 1
  7 3 -> 1
  6 3 -> 1
  6 6 -> 0
  7 6 -> 1
  else -> (- 1)
}
k!2123 -> {
  7 -> 7
  4 -> 4
  2 -> 2
  3 -> 3
  else -> 6
}
getBPosGetTime!6 -> {
  CatBPos!val!0 -> 6
  CatBPos!val!2 -> 7
  else -> 4
}
compareInt!21 -> {
  (compareInt!21!2126 (k!2123 (:var 0)) (k!2123 (:var 1)))
}
compareIgnoreCaseString!22 -> {
  0
}


real	0m4.443s
user	0m4.430s
sys	0m0.012s
descartes -p=2 -m=2: 
Sat: VIOLATES [Transitivity] (compare): for all x, y and z, compare(x, y) > 0 and compare/equals(y, z) > 0 implies compare/equals(x, z) > 0.
o11!8 -> CatBPos!val!1
res2!15 -> 1
o21!9 -> CatBPos!val!0
lCompare12!25 -> 1
o12!10 -> CatBPos!val!0
o22!11 -> CatBPos!val!2
lCompare32!33 -> (- 1)
res3!16 -> (- 1)
lCompare22!30 -> 1
o13!12 -> CatBPos!val!1
o23!13 -> CatBPos!val!2
res1!14 -> 1
compareDouble!20 -> {
  0
}
equals!23 -> {
  5
}
compareInt!21!2110 -> {
  6 7 -> (- 1)
  6 4 -> (- 1)
  4 3 -> (- 1)
  3 3 -> 0
  6 3 -> (- 1)
  6 2 -> (- 1)
  4 2 -> (- 1)
  2 2 -> 0
  7 2 -> (- 1)
  7 3 -> (- 1)
  3 2 -> (- 1)
  4 4 -> 0
  7 7 -> 0
  7 4 -> (- 1)
  6 6 -> 0
  else -> 1
}
getHdopBPosGetTime!7 -> {
  CatBPos!val!0 -> 3
  else -> 2
}
getHdopBPosGetTimeIsNotVoid!0 -> {
  CatBPos!val!2 -> false
  else -> true
}
k!2107 -> {
  7 -> 7
  4 -> 4
  2 -> 2
  3 -> 3
  else -> 6
}
getBPosGetTime!6 -> {
  CatBPos!val!1 -> 6
  CatBPos!val!2 -> 7
  else -> 4
}
compareInt!21 -> {
  (compareInt!21!2110 (k!2107 (:var 0)) (k!2107 (:var 1)))
}
compareIgnoreCaseString!22 -> {
  0
}


real	0m6.199s
user	0m6.176s
sys	0m0.023s
descartes -p=2 -m=3: 
Sat: VIOLATES [Transitivity] (compare): for all x, y and z, compare(x, y) > 0 and compare/equals(y, z) > 0 implies compare/equals(x, z) > 0.
res1!14 -> 1
lCompare22!1896 -> 1
lCompare12!25 -> 1
o21!9 -> CatBPos!val!1
o12!10 -> CatBPos!val!1
o22!11 -> CatBPos!val!2
res2!15 -> 1
lCompare32!1899 -> (- 1)
res3!16 -> (- 1)
o13!12 -> CatBPos!val!0
o23!13 -> CatBPos!val!2
o11!8 -> CatBPos!val!0
compareDouble!20 -> {
  0
}
equals!23 -> {
  5
}
getHdopBPosGetTime!7 -> {
  CatBPos!val!1 -> 3
  else -> 2
}
getHdopBPosGetTimeIsNotVoid!0 -> {
  CatBPos!val!2 -> false
  else -> true
}
compareInt!21!2126 -> {
  2 3 -> 1
  4 7 -> 1
  4 6 -> 1
  6 2 -> 1
  3 3 -> 0
  7 7 -> 0
  4 3 -> 1
  4 4 -> 0
  4 2 -> 1
  2 2 -> 0
  7 2 -> 1
  7 3 -> 1
  6 3 -> 1
  6 6 -> 0
  7 6 -> 1
  else -> (- 1)
}
k!2123 -> {
  7 -> 7
  4 -> 4
  2 -> 2
  3 -> 3
  else -> 6
}
getBPosGetTime!6 -> {
  CatBPos!val!0 -> 6
  CatBPos!val!2 -> 7
  else -> 4
}
compareInt!21 -> {
  (compareInt!21!2126 (k!2123 (:var 0)) (k!2123 (:var 1)))
}
compareIgnoreCaseString!22 -> {
  0
}


real	0m4.527s
user	0m4.526s
sys	0m0.000s
