Property 2
descartes -p=2 -m=0: 
Sat: VIOLATES [Transitivity] (compare): for all x, y and z, compare(x, y) > 0 and compare/equals(y, z) > 0 implies compare/equals(x, z) > 0.
o23!8 -> Contact!val!2
compareFirstName21 -> 0
compareFirstName31 -> 0
compareEmail31 -> 0
o13!7 -> Contact!val!0
compareEmail22!7086 -> 1
res3!11 -> (- 1)
compareEmail21 -> 0
compareFirstName32!7420 -> 0
compareLastName21 -> 0
o11!3 -> Contact!val!0
compareFirstName22!5523 -> 0
compareFirstName11 -> 0
res2!10 -> 1
compareLastName31 -> 0
o21!4 -> Contact!val!1
o22!6 -> Contact!val!2
compareLastName11 -> 0
o12!5 -> Contact!val!1
compareLastName12!21 -> 1
res1!9 -> 1
compareFirstName12!20 -> 0
compareEmail32!7421 -> (- 1)
compareDouble!15 -> {
  0
}
getEmails!0 -> {
  Contact!val!0 -> 9
  Contact!val!2 -> 10
  else -> 4
}
compareInt!16 -> {
  0
}
equals!18 -> {
  5
}
compareIgnoreCaseString!17 -> {
  (compareIgnoreCaseString!17!8129 (k!8127 (:var 0)) (k!8127 (:var 1)))
}
getLastName!1 -> {
  Contact!val!0 -> 8
  Contact!val!2 -> 0
  else -> 3
}
getFirstName!2 -> {
  Contact!val!0 -> 6
  Contact!val!2 -> 7
  else -> 2
}
k!8127 -> {
  8 -> 8
  10 -> 10
  6 -> 6
  7 -> 7
  3 -> 3
  4 -> 4
  9 -> 9
  else -> 2
}
compareIgnoreCaseString!17!8129 -> {
  6 2 -> 0
  2 7 -> 0
  6 7 -> 0
  9 10 -> (- 1)
  3 8 -> (- 1)
  7 4 -> (- 1)
  7 10 -> (- 1)
  10 4 -> (- 1)
  3 2 -> (- 1)
  2 2 -> 0
  9 2 -> (- 1)
  9 8 -> (- 1)
  8 10 -> (- 1)
  2 10 -> (- 1)
  9 3 -> 0
  3 10 -> (- 1)
  10 10 -> 0
  9 4 -> (- 1)
  9 7 -> (- 1)
  3 6 -> (- 1)
  8 4 -> (- 1)
  3 3 -> 0
  6 6 -> 0
  6 10 -> (- 1)
  6 4 -> (- 1)
  9 6 -> (- 1)
  7 7 -> 0
  7 2 -> 0
  8 6 -> (- 1)
  7 6 -> 0
  2 6 -> 0
  8 8 -> 0
  3 9 -> 0
  8 7 -> (- 1)
  8 2 -> (- 1)
  2 4 -> (- 1)
  3 4 -> (- 1)
  3 7 -> (- 1)
  9 9 -> 0
  4 4 -> 0
  else -> 1
}


real	0m22.335s
user	0m22.320s
sys	0m0.012s
descartes -p=2 -m=1: 
Sat: VIOLATES [Transitivity] (compare): for all x, y and z, compare(x, y) > 0 and compare/equals(y, z) > 0 implies compare/equals(x, z) > 0.
o23!8 -> Contact!val!2
compareFirstName21 -> 0
compareFirstName31 -> 0
compareEmail31 -> 0
o13!7 -> Contact!val!0
res3!11 -> (- 1)
compareFirstName22!2670 -> 0
compareEmail32!3512 -> (- 1)
compareFirstName32!3509 -> 0
compareEmail21 -> 0
compareLastName21 -> 0
o11!3 -> Contact!val!0
compareFirstName11 -> 0
res2!10 -> 1
compareLastName31 -> 0
o21!4 -> Contact!val!1
o22!6 -> Contact!val!2
compareLastName11 -> 0
o12!5 -> Contact!val!1
compareLastName12!21 -> 1
res1!9 -> 1
compareEmail22!3508 -> 1
compareFirstName12!20 -> 0
compareDouble!15 -> {
  0
}
getEmails!0 -> {
  Contact!val!0 -> 9
  Contact!val!2 -> 10
  else -> 4
}
compareInt!16 -> {
  0
}
equals!18 -> {
  5
}
compareIgnoreCaseString!17 -> {
  (compareIgnoreCaseString!17!3850 (k!3848 (:var 0)) (k!3848 (:var 1)))
}
getLastName!1 -> {
  Contact!val!0 -> 8
  Contact!val!2 -> 0
  else -> 3
}
getFirstName!2 -> {
  Contact!val!0 -> 6
  Contact!val!2 -> 7
  else -> 2
}
k!3848 -> {
  8 -> 8
  10 -> 10
  6 -> 6
  7 -> 7
  3 -> 3
  4 -> 4
  9 -> 9
  else -> 2
}
compareIgnoreCaseString!17!3850 -> {
  6 2 -> 0
  2 7 -> 0
  6 7 -> 0
  9 10 -> (- 1)
  3 8 -> (- 1)
  10 4 -> (- 1)
  10 6 -> (- 1)
  3 2 -> (- 1)
  8 10 -> (- 1)
  8 4 -> (- 1)
  9 6 -> (- 1)
  9 7 -> (- 1)
  9 9 -> 0
  9 4 -> (- 1)
  4 7 -> (- 1)
  7 2 -> 0
  7 7 -> 0
  4 4 -> 0
  4 2 -> (- 1)
  4 6 -> (- 1)
  2 2 -> 0
  3 3 -> 0
  3 9 -> (- 1)
  3 10 -> (- 1)
  8 9 -> (- 1)
  3 4 -> (- 1)
  7 6 -> 0
  3 7 -> (- 1)
  8 7 -> (- 1)
  10 10 -> 0
  9 2 -> (- 1)
  8 2 -> (- 1)
  10 7 -> (- 1)
  8 8 -> 0
  8 6 -> (- 1)
  3 6 -> (- 1)
  10 2 -> (- 1)
  6 6 -> 0
  2 6 -> 0
  else -> 1
}


real	0m11.113s
user	0m11.090s
sys	0m0.020s
descartes -p=2 -m=2: 
Sat: VIOLATES [Transitivity] (compare): for all x, y and z, compare(x, y) > 0 and compare/equals(y, z) > 0 implies compare/equals(x, z) > 0.
o23!8 -> Contact!val!2
compareFirstName21 -> 0
compareFirstName22!27 -> 0
compareFirstName31 -> 0
compareEmail31 -> 0
o13!7 -> Contact!val!1
compareEmail32!37 -> (- 1)
res3!11 -> (- 1)
compareEmail21 -> 0
compareFirstName32!34 -> 0
compareLastName21 -> 0
o11!3 -> Contact!val!1
compareFirstName11 -> 0
res2!10 -> 1
compareLastName31 -> 0
o21!4 -> Contact!val!0
compareEmail22!30 -> 1
o22!6 -> Contact!val!2
compareLastName11 -> 0
compareLastName12!21 -> 1
res1!9 -> 1
o12!5 -> Contact!val!0
compareFirstName12!20 -> 0
compareDouble!15 -> {
  0
}
getEmails!0 -> {
  Contact!val!1 -> 9
  Contact!val!2 -> 10
  else -> 4
}
compareInt!16 -> {
  0
}
equals!18 -> {
  5
}
compareIgnoreCaseString!17 -> {
  (compareIgnoreCaseString!17!3893 (k!3891 (:var 0)) (k!3891 (:var 1)))
}
getLastName!1 -> {
  Contact!val!1 -> 8
  Contact!val!2 -> 0
  else -> 3
}
getFirstName!2 -> {
  Contact!val!1 -> 6
  Contact!val!2 -> 7
  else -> 2
}
k!3891 -> {
  8 -> 8
  10 -> 10
  6 -> 6
  7 -> 7
  3 -> 3
  4 -> 4
  9 -> 9
  else -> 2
}
compareIgnoreCaseString!17!3893 -> {
  6 2 -> 0
  8 3 -> 1
  2 7 -> 0
  4 10 -> 1
  6 7 -> 0
  6 4 -> 1
  6 10 -> 1
  8 9 -> 1
  6 9 -> 1
  2 8 -> 1
  2 3 -> 1
  4 3 -> 1
  2 9 -> 1
  7 9 -> 1
  7 2 -> 0
  6 8 -> 1
  7 6 -> 0
  8 4 -> 1
  7 8 -> 1
  7 7 -> 0
  2 2 -> 0
  6 6 -> 0
  2 6 -> 0
  7 10 -> 1
  7 3 -> 1
  8 10 -> 1
  2 4 -> 1
  2 10 -> 1
  6 3 -> 1
  7 4 -> 1
  10 3 -> 1
  10 10 -> 0
  9 9 -> 0
  4 9 -> 1
  4 4 -> 0
  10 9 -> 1
  3 9 -> 1
  3 3 -> 0
  8 8 -> 0
  else -> (- 1)
}


real	0m13.791s
user	0m13.767s
sys	0m0.020s
descartes -p=2 -m=3: 
Sat: VIOLATES [Transitivity] (compare): for all x, y and z, compare(x, y) > 0 and compare/equals(y, z) > 0 implies compare/equals(x, z) > 0.
o23!8 -> Contact!val!2
compareFirstName21 -> 0
compareFirstName31 -> 0
compareEmail31 -> 0
o13!7 -> Contact!val!0
res3!11 -> (- 1)
compareFirstName22!2670 -> 0
compareEmail32!3512 -> (- 1)
compareFirstName32!3509 -> 0
compareEmail21 -> 0
compareLastName21 -> 0
o11!3 -> Contact!val!0
compareFirstName11 -> 0
res2!10 -> 1
compareLastName31 -> 0
o21!4 -> Contact!val!1
o22!6 -> Contact!val!2
compareLastName11 -> 0
o12!5 -> Contact!val!1
compareLastName12!21 -> 1
res1!9 -> 1
compareEmail22!3508 -> 1
compareFirstName12!20 -> 0
compareDouble!15 -> {
  0
}
getEmails!0 -> {
  Contact!val!0 -> 9
  Contact!val!2 -> 10
  else -> 4
}
compareInt!16 -> {
  0
}
equals!18 -> {
  5
}
compareIgnoreCaseString!17 -> {
  (compareIgnoreCaseString!17!3850 (k!3848 (:var 0)) (k!3848 (:var 1)))
}
getLastName!1 -> {
  Contact!val!0 -> 8
  Contact!val!2 -> 0
  else -> 3
}
getFirstName!2 -> {
  Contact!val!0 -> 6
  Contact!val!2 -> 7
  else -> 2
}
k!3848 -> {
  8 -> 8
  10 -> 10
  6 -> 6
  7 -> 7
  3 -> 3
  4 -> 4
  9 -> 9
  else -> 2
}
compareIgnoreCaseString!17!3850 -> {
  6 2 -> 0
  2 7 -> 0
  6 7 -> 0
  9 10 -> (- 1)
  3 8 -> (- 1)
  10 4 -> (- 1)
  10 6 -> (- 1)
  3 2 -> (- 1)
  8 10 -> (- 1)
  8 4 -> (- 1)
  9 6 -> (- 1)
  9 7 -> (- 1)
  9 9 -> 0
  9 4 -> (- 1)
  4 7 -> (- 1)
  7 2 -> 0
  7 7 -> 0
  4 4 -> 0
  4 2 -> (- 1)
  4 6 -> (- 1)
  2 2 -> 0
  3 3 -> 0
  3 9 -> (- 1)
  3 10 -> (- 1)
  8 9 -> (- 1)
  3 4 -> (- 1)
  7 6 -> 0
  3 7 -> (- 1)
  8 7 -> (- 1)
  10 10 -> 0
  9 2 -> (- 1)
  8 2 -> (- 1)
  10 7 -> (- 1)
  8 8 -> 0
  8 6 -> (- 1)
  3 6 -> (- 1)
  10 2 -> (- 1)
  6 6 -> 0
  2 6 -> 0
  else -> 1
}


real	0m10.897s
user	0m10.884s
sys	0m0.012s
