Property 2
descartes -p=2 -m=0: 
Sat: Comparator VIOLATES Property 2: for all x, y and z, compare(x, y) > 0 and compare(y, z) > 0 implies compare(x, z) > 0.
tripleCount231 -> 0
res1!10 -> 1
o23!9 -> PokerHand!val!1
o11!4 -> PokerHand!val!0
o22!7 -> PokerHand!val!1
i221 -> 1
o21!5 -> PokerHand!val!2
higherTriple11 -> 12
tripleCount131 -> 0
tripleCount221 -> 0
tripleCount211 -> 1
i221!5075 -> 0
tripleCount111 -> 0
res3!12 -> 0
tripleCount121 -> 1
res2!11 -> 1
o13!8 -> PokerHand!val!0
i211 -> 11
i211!5076 -> 0
higherTriple21 -> 12
o12!6 -> PokerHand!val!2
charAt!2 -> {
  (charAt!2!5174 (:var 0) (k!5173 (:var 1)))
}
indexOf!3 -> {
  PokerHand!val!2 2 -> 7
  else -> (- 1)
}
charAt!2!5174 -> {
  PokerHand!val!0 11 -> 6
  PokerHand!val!2 1 -> 8
  PokerHand!val!2 0 -> 15
  PokerHand!val!1 0 -> 16
  PokerHand!val!0 10 -> 18
  PokerHand!val!2 10 -> 19
  PokerHand!val!0 1 -> 20
  PokerHand!val!0 0 -> 21
  else -> 2
}
compareDouble!16 -> {
  0
}
countOccurrencesOf!1 -> {
  PokerHand!val!2 3 -> 1
  else -> 0
}
compareIgnoreCaseString!18 -> {
  0
}
k!5173 -> {
  (let ((a!1 (ite (>= (:var 0) 10)
                  (ite (>= (:var 0) 11) (ite (>= (:var 0) 13) 13 11) 10)
                  1)))
    (ite (>= (:var 0) 1) a!1 0))
}
compareInt!17 -> {
  0
}
lastIndexOf!0 -> {
  12
}


real	0m0.669s
user	0m0.652s
sys	0m0.018s
descartes -p=2 -m=1: 
Sat: Comparator VIOLATES Property 2: for all x, y and z, compare(x, y) > 0 and compare(y, z) > 0 implies compare(x, z) > 0.
i221!17926 -> 0
res1!10 -> 1
o23!9 -> PokerHand!val!1
o11!4 -> PokerHand!val!0
o22!7 -> PokerHand!val!1
i221 -> 0
tripleCount231 -> 0
o21!5 -> PokerHand!val!2
higherTriple11 -> (- 1)
tripleCount131 -> 0
tripleCount221 -> 0
tripleCount211 -> 1
tripleCount111 -> 0
res3!12 -> 0
i211!17927 -> 0
tripleCount121 -> 1
res2!11 -> 1
o13!8 -> PokerHand!val!0
i211 -> 11
higherTriple21 -> (- 1)
o12!6 -> PokerHand!val!2
charAt!2 -> {
  (charAt!2!17994 (:var 0) (k!17993 (:var 1)))
}
indexOf!3 -> {
  PokerHand!val!2 2 -> 7
  else -> (- 1)
}
k!17993 -> {
  (let ((a!1 (ite (>= (:var 0) 0)
                  (ite (>= (:var 0) 10) (ite (>= (:var 0) 11) 11 10) 0)
                  (- 1))))
    (ite (>= (:var 0) (- 1)) a!1 (- 2)))
}
compareDouble!16 -> {
  0
}
charAt!2!17994 -> {
  PokerHand!val!0 11 -> 6
  PokerHand!val!2 0 -> 8
  PokerHand!val!0 10 -> 15
  PokerHand!val!2 10 -> 16
  PokerHand!val!0 0 -> 18
  else -> 2
}
countOccurrencesOf!1 -> {
  PokerHand!val!2 3 -> 1
  else -> 0
}
compareIgnoreCaseString!18 -> {
  0
}
compareInt!17 -> {
  0
}
lastIndexOf!0 -> {
  (- 1)
}


real	0m8.841s
user	0m8.824s
sys	0m0.016s
descartes -p=2 -m=2: 
descartes: buildArtCond: fn

real	0m0.028s
user	0m0.024s
sys	0m0.004s
descartes -p=2 -m=3: 
descartes: buildArtCond: fn

real	0m0.026s
user	0m0.022s
sys	0m0.004s
